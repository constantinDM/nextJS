{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Constantin\\\\Desktop\\\\React-notes\\\\ReactApp\\\\325-06-onwards-to-a-bigger-project-starting-project\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\index.js\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A first Meetup \",\n  image: \"https://www.planetware.com/wpimages/2020/07/new-york-best-cities-new-york-city.jpg\",\n  address: \"Some address 5, 12345 Some City\",\n  description: \"THis is a first meetup\"\n}, {\n  id: \"m2\",\n  title: \"A second Meetup \",\n  image: \"https://www.planetware.com/wpimages/2020/07/new-york-best-cities-new-york-city.jpg\",\n  address: \"Some address 10, 12345 Some City\",\n  description: \"THis is a second meetup\"\n}, {\n  id: \"m3\",\n  title: \"A third Meetup \",\n  image: \"https://www.planetware.com/wpimages/2020/07/new-york-best-cities-new-york-city.jpg\",\n  address: \"Some address 15, 12345 Some City\",\n  description: \"THis is a third meetup\"\n}, {\n  id: \"m4\",\n  title: \"A forth Meetup \",\n  image: \"https://www.planetware.com/wpimages/2020/07/new-york-best-cities-new-york-city.jpg\",\n  address: \"Some address 20, 12345 Some City\",\n  description: \"THis is a forth meetup\"\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n} // export async function getServerSideProps(context) {\n//   // all code here will run on server, never on client\n//   const req = context.req;\n//   const rep = context.rep;\n//   // fetch data from API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   }; // no need to revalidate because this function works for every incoming request\n// }\n\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS // they would be prepared then set for HomePage(props)\n\n    },\n    revalidate: 60 // every 60 seconds\n\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/Constantin/Desktop/React-notes/ReactApp/325-06-onwards-to-a-bigger-project-starting-project/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","revalidate"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,oFAJJ;AAKEC,EAAAA,OAAO,EAAE,iCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,kBAFT;AAGEC,EAAAA,KAAK,EACH,oFAJJ;AAKEC,EAAAA,OAAO,EAAE,kCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAToB,EAiBpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,oFAJJ;AAKEC,EAAAA,OAAO,EAAE,kCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAjBoB,EAyBpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,oFAJJ;AAKEC,EAAAA,OAAO,EAAE,kCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAzBoB,CAAtB;;AAmCA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,SAAO;AACLF,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAER,aADJ,CACmB;;AADnB,KADF;AAILU,IAAAA,UAAU,EAAE,EAJP,CAIW;;AAJX,GAAP;AAMD;AACD,eAAeJ,QAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst DUMMY_MEETUPS = [\r\n  {\r\n    id: \"m1\",\r\n    title: \"A first Meetup \",\r\n    image:\r\n      \"https://www.planetware.com/wpimages/2020/07/new-york-best-cities-new-york-city.jpg\",\r\n    address: \"Some address 5, 12345 Some City\",\r\n    description: \"THis is a first meetup\",\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    title: \"A second Meetup \",\r\n    image:\r\n      \"https://www.planetware.com/wpimages/2020/07/new-york-best-cities-new-york-city.jpg\",\r\n    address: \"Some address 10, 12345 Some City\",\r\n    description: \"THis is a second meetup\",\r\n  },\r\n  {\r\n    id: \"m3\",\r\n    title: \"A third Meetup \",\r\n    image:\r\n      \"https://www.planetware.com/wpimages/2020/07/new-york-best-cities-new-york-city.jpg\",\r\n    address: \"Some address 15, 12345 Some City\",\r\n    description: \"THis is a third meetup\",\r\n  },\r\n  {\r\n    id: \"m4\",\r\n    title: \"A forth Meetup \",\r\n    image:\r\n      \"https://www.planetware.com/wpimages/2020/07/new-york-best-cities-new-york-city.jpg\",\r\n    address: \"Some address 20, 12345 Some City\",\r\n    description: \"THis is a forth meetup\",\r\n  },\r\n];\r\n\r\nfunction HomePage(props) {\r\n  return <MeetupList meetups={props.meetups} />;\r\n}\r\n\r\n// export async function getServerSideProps(context) {\r\n//   // all code here will run on server, never on client\r\n//   const req = context.req;\r\n//   const rep = context.rep;\r\n//   // fetch data from API\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS,\r\n//     },\r\n//   }; // no need to revalidate because this function works for every incoming request\r\n// }\r\n\r\nexport async function getStaticProps() {\r\n  // fetch data from an API\r\n  return {\r\n    props: {\r\n      meetups: DUMMY_MEETUPS, // they would be prepared then set for HomePage(props)\r\n    },\r\n    revalidate: 60, // every 60 seconds\r\n  };\r\n}\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}